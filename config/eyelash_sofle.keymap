#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1            &kp N2        &kp N3            &kp N4     &kp N5       &kp UP_ARROW     &kp N6     &kp N7           &kp N8             &kp N9         &kp N0             &kp DEL
&kp GRAVE   &kp Q             &kp W         &kp E             &kp R      &kp T        &kp DOWN_ARROW   &kp Y      &kp U            &kp I              &kp O          &kp P              &kp BSLH
&kp CAPS    &kp A             &kp S         &kp D             &kp F      &kp G        &kp LEFT_ARROW   &kp H      &kp J            &kp K              &kp L          &kp SEMI           &kp APOS
&kp LSHFT   &kp Z             &kp X         &kp C             &kp V      &kp B        &kp RIGHT_ARROW  &kp N      &kp M            &kp COMMA          &kp DOT        &kp FSLH           &kp RIGHT_SHIFT
&kp C_MUTE  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 TAB  &kp SPACE    &kp ENTER        &kp ENTER  &lt 2 BACKSPACE  &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp TILDE   &kp F1           &kp F2       &kp F3          &kp F4                &kp F5               &mmv MOVE_UP     &kp F6        &kp F7         &kp F8        &kp F9      &kp F10       &kp F11
&trans      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH        &kp LEFT_BRACKET      &kp RIGHT_BRACKET    &mmv MOVE_DOWN   &kp N7        &kp N8         &kp N9        &kp MINUS   &kp SLASH     &kp F12
&trans      &kp TILDE        &kp MINUS    &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RPAR             &mmv MOVE_LEFT   &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp PLUS    &kp ASTERISK  &trans
&trans      &trans           &trans       &trans          &kp LEFT_BRACE        &kp RIGHT_BRACE      &mmv MOVE_RIGHT  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp PERIOD  &kp EQUAL     &trans
&kp C_MUTE  &trans           &trans       &trans          &trans                &trans               &mkp LCLK        &kp ENTER     &kp BACKSPACE  &kp N0        &trans      &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans      &trans             &trans           &trans            &trans    &mmv MOVE_UP     &trans         &trans          &trans         &trans     &trans  &trans
&trans  &trans      &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_MUTE        &trans    &mmv MOVE_DOWN   &kp PAGE_UP    &kp HOME        &kp UP_ARROW   &kp END    &trans  &trans
&trans  &kp C_PREV  &kp C_NEXT         &kp C_STOP       &kp C_PLAY_PAUSE  &trans    &mmv MOVE_LEFT   &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN       &kp RIGHT  &trans  &trans
&trans  &sys_reset  &trans             &bootloader      &trans            &trans    &mmv MOVE_RIGHT  &trans         &kp K_BACK      &kp K_FORWARD  &trans     &trans  &trans
&trans  &trans      &trans             &trans           &trans            &trans    &mkp LCLK        &lt 3 ENTER    &trans          &trans         &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans  &sys_reset
&trans  &bt BT_CLR       &bt BT_CLR_ALL  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &bootloader
&trans  &out OUT_USB     &out OUT_BLE    &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &soft_off
&trans  &trans           &trans          &trans           &trans           &trans          &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
